name: Build and Deploy to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    # Cache node modules for faster builds
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    # Create .env file from GitHub secrets
    - name: Create .env file
      run: |
        touch .env.local
        echo "NEXT_PUBLIC_APP_URL=${{ secrets.NEXT_PUBLIC_APP_URL }}" >> .env.local
        echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env.local
        echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" >> .env.local
        echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> .env.local
        echo "NEXT_PUBLIC_SUPABASE_SERVICE_ROLE_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_SERVICE_ROLE_KEY }}" >> .env.local
        echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env.local
        echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env.local
        echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env.local
        echo "EMAIL_SERVER_HOST=${{ secrets.EMAIL_SERVER_HOST }}" >> .env.local
        echo "EMAIL_SERVER_PORT=${{ secrets.EMAIL_SERVER_PORT }}" >> .env.local
        echo "EMAIL_SERVER_USER=${{ secrets.EMAIL_SERVER_USER }}" >> .env.local
        echo "EMAIL_SERVER_PASSWORD=${{ secrets.EMAIL_SERVER_PASSWORD }}" >> .env.local
    
    # Set up Docker Buildx for efficient builds
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    # Log in to Azure using service principal
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Log in to Azure Container Registry
    - name: Log in to container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    # Build and push container image with caching
    - name: Build and push container image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.REGISTRY_LOGIN_SERVER }}/nextjs-app:${{ github.sha }},${{ secrets.REGISTRY_LOGIN_SERVER }}/nextjs-app:latest
        cache-from: type=registry,ref=${{ secrets.REGISTRY_LOGIN_SERVER }}/nextjs-app:latest
        cache-to: type=inline
    
    # Deploy to Azure Container Instances
    - name: Deploy to Azure Container Instances
      uses: azure/aci-deploy@v1
      with:
        resource-group: Nextjs  # Replace with your resource group name
        dns-name-label: nextjs-app-${{ github.run_number }}  # Creates a unique DNS name
        image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/nextjs-app:${{ github.sha }}
        registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        registry-username: ${{ secrets.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        name: nextjs-app
        location: 'eastus'  # Replace with your preferred Azure region
        ports: 3000
        cpu: 1
        memory: 1.5
        environment-variables: |
          NODE_ENV=production
          NEXT_PUBLIC_APP_URL=${{ secrets.NEXT_PUBLIC_APP_URL }}
          NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}
          NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          HOST=0.0.0.0
        secure-environment-variables: |
          NEXT_PUBLIC_SUPABASE_SERVICE_ROLE_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_SERVICE_ROLE_KEY }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
          EMAIL_SERVER_HOST=${{ secrets.EMAIL_SERVER_HOST }}
          EMAIL_SERVER_PORT=${{ secrets.EMAIL_SERVER_PORT }}
          EMAIL_SERVER_USER=${{ secrets.EMAIL_SERVER_USER }}
          EMAIL_SERVER_PASSWORD="${{ secrets.EMAIL_SERVER_PASSWORD }}"

    # Output the deployed application URL
    - name: Output App URL
      run: |
        echo "Your app has been deployed to: http://nextjs-app-${{ github.run_number }}.eastus.azurecontainer.io:3000"